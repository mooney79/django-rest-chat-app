{"version":3,"sources":["components/RoomNavButtons.js","components/RoomNav.js","components/ChatMessages.js","components/Chatroom.js","components/Header.js","components/LoginScreen.js","components/RegisterForm.js","components/InputField.js","App.js","reportWebVitals.js","index.js"],"names":["RoomNavButtons","props","className","type","onClick","event","setSelection","value","document","querySelectorAll","forEach","button","style","border","background","target","RoomNav","addRoomHTML","useState","edit","setEdit","name","roomName","setRoomName","roomNavButtonHTML","rooms","map","room","selection","text","a","fetch","method","headers","Cookies","get","body","JSON","stringify","catch","console","log","ok","setRooms","fetchRooms","onSubmit","e","preventDefault","addRoom","id","onChange","prevState","ChatMessages","newText","setNewText","isEditing","setIsEditing","Error","index","msgs","findIndex","msg","remainingMsgs","splice","setMsgs","updatedMsgs","editHTML","editMsg","messageHTML","sender","deleteMsg","Chatroom","RoomHTML","filter","room_assoc","roomMsg","Header","useEffect","ctx3","getElementById","getContext","moveTo","beginPath","x","y","xCount","draw","arc","Math","PI","strokeStyle","stroke","i","drawPants","last100","hue","frame","time","fillStyle","fill","requestAnimationFrame","width","height","LoginScreen","handleChange","setUser","handleLogin","user","htmlFor","placeholder","required","username","password","setRegister","RegisterForm","email","password1","password2","error","setError","handleError","err","warn","handleRegistration","options","response","json","data","set","key","setLogged","InputField","message","setMessage","InputGroup","FormControl","as","Text","submitMsg","App","logged","register","fetchMsgs","remove","newMsg","fetchUser","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3d3341ff.chunk.js","sourcesContent":["function RoomNavButtons(props){\n    function handleClick3(event){\n            props.setSelection(props.value);\n            const $buttons = document.querySelectorAll('button');\n            $buttons.forEach(button => {button.style.border=\"none\";\n            button.style.background=\"white\";})\n            let target = event.target;\n            target.style.border=\"dashed black 2px\"\n            target.style.background=\"rgba(0,0,0,0.1)\"       \n    }\n    \n    return(\n        <>\n            <button className=\"nav-button btn\" type=\"button\" key={props.value} onClick={handleClick3}>&#8212; {props.value} &#8212;</button>\n        </>\n    )\n}\n\nexport default RoomNavButtons","import {useState} from 'react';\nimport RoomNavButtons from './RoomNavButtons';\nimport Cookies from 'js-cookie'\n\n\nfunction RoomNav(props){\n   \n    const [edit, setEdit] = useState(false);\n    const [roomName, setRoomName] = useState({name: ''});\n\n    function handleInput(event) {\n        const {name, value} = event.target;\n        setRoomName(prevState => ({   \n            ...prevState,         \n            [name]:value,\n        }))\n    }\n\n\n    const roomNavButtonHTML = props.rooms.map(room => <RoomNavButtons key={room.name} \n        value={room.name} setSelection={props.setSelection} selection={props.selection}/>);\n    \n    let addRoomHTML;\n\n    function handleClick(e){\n        console.log('Create a new room dialogue here!') //ADD THIS!\n        setEdit(true);\n        console.log(edit);\n    }\n\n    function handleClick2(e){\n        e.preventDefault();\n        addRoom(roomName);\n        setEdit(false);\n        console.log(edit);\n    }\n\n    async function addRoom(text) {\n        const response = await fetch(`/api_v1/chat/rooms/`,{\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify(text),\n        }).catch(console.log('Something went wrong'));\n        if (response.ok){\n              console.log('New Room Created!');\n              props.setRooms([...props.rooms, [roomName]]);\n              props.fetchRooms();\n              setRoomName('');\n    \n        }\n      }\n\n\n    if (edit) {\n        addRoomHTML = <form className=\"row\" onSubmit={handleClick2}><input className=\"col-10\" type=\"text\" id=\"name\" name=\"name\" value={roomName.name} onChange={handleInput}/><button className=\"nav-button btn new-btn col-10\" type=\"submit\" key=\"new_room\">Add Room</button></form> \n    } else {\n        addRoomHTML = <button id=\"new-room\" className=\"nav-button btn new-btn\" type=\"button\" key=\"new_room\" onClick={handleClick}> +New+</button>\n    }\n\n\n    return(\n        <div className=\"nav-bar col-2 btn-group-vertical\">\n            {roomNavButtonHTML}\n            {addRoomHTML}\n        </div>\n    )\n}\n\n\nexport default RoomNav","import { useState } from 'react'\nimport Cookies from 'js-cookie';\n\nfunction ChatMessages(props){\n    \n    const [newText, setNewText] = useState('');\n    const [isEditing, setIsEditing] = useState(false);\n    \n    async function deleteMsg(id) {\n        const response = await fetch(`/api_v1/chat/msgs/${id}/`,{\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n        });  //.catch(handleError)\n        if (!response.ok){\n            throw new Error('Network response was not ok')\n        }\n          const index=props.msgs.findIndex(msg => msg.id === id);\n          const remainingMsgs = [...props.msgs];\n          remainingMsgs.splice(index, 1);\n          props.setMsgs(remainingMsgs);\n    }\n    \n    async function editMsg(id, newText){\n        const index = props.msgs.findIndex(msg => msg.id === id);\n        const updatedMsgs = [...props.msgs];\n        updatedMsgs[index].text = newText;\n        props.setMsgs(updatedMsgs);\n        const response = await fetch(`/api_v1/chat/msgs/${id}/`,{\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n          },\n          body: JSON.stringify(updatedMsgs[index]),\n        })  //.catch(handleError);\n        if (!response.ok){\n            throw new Error('Network response was not ok')\n        } \n    }\n    \n    function handleChange(event){\n        setNewText(event.target.value);\n    }\n\n    function handleSubmit(event){\n        event.preventDefault();\n        editMsg(props.id, newText);\n        setNewText(newText);\n        setIsEditing(false);\n    }\n    \n    const editHTML = (\n        <form onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"newText\" value={newText} onChange={handleChange} />\n                <button type=\"submit\">Update</button>\n        </form>\n    );\n\n    const messageHTML = (\n        <div>\n            <p><span className=\"user mt-4\">{props.sender}</span></p>\n            <p className=\"message\">{props.text}</p>\n            <button type=\"button\" onClick={() => setIsEditing(true)} >Edit</button>\n            <button type=\"button\" onClick={() => deleteMsg(props.id)}> Delete </button>\n        </div>\n    )\n        \n    return(\n        <li> {isEditing ? editHTML: messageHTML}</li>\n    )\n}\n\nexport default ChatMessages\n\n\n\n\n\n\n\n\n/*\n\n \n\n\n\n\n*/","import ChatMessages from \"./ChatMessages\";\n\n\nfunction Chatroom(props){\n    let roomMessages=props.msgs.filter(msg => props.selection === msg.room_assoc);\n    let RoomHTML = roomMessages.map(roomMsg => <ChatMessages key={roomMsg.id} {...roomMsg} msgs={props.msgs} setMsgs={props.setMsgs} />)\n    \n    return(\n        <div className=\"chatroom col-12\">\n            {RoomHTML}\n        </div>\n    )\n}\n\nexport default Chatroom","import {useEffect} from 'react'\nfunction Header(){\n    \n    useEffect(() => {\n        const canvas3 = document.getElementById('canvas3');\n        const ctx3 = canvas3.getContext('2d');\n        \n        ctx3.moveTo(30, 20);\n        ctx3.beginPath();\n        let x = 30;\n        let y = 20;\n        let xCount=0;\n        \n        function draw(){\n            ctx3.arc(x, y, 2, 0, Math.PI * 2);\n            ctx3.strokeStyle = \"transparent\";\n            ctx3.stroke();\n        }\n        \n        function drawPants() {  \n            for (let i=0; i < 75; i++){\n                xCount++;\n                draw();\n                if (xCount > 3){\n                    xCount=0;\n                    x--;\n                }\n                y++;\n            }\n                            \n            for (let i=0; i < 25; i++){\n                x++;\n                draw();\n            }\n            \n            for (let i=0; i < 50; i++){\n                xCount++;\n                draw();\n                if (xCount > 3){\n                    xCount=0;\n                    x++;\n                }\n                y--;\n            }\n                \n            for (let i=0; i < 50; i++){\n                xCount++;\n                draw();\n                if (xCount > 3){\n                    xCount=0;\n                    x++;\n                }\n                y++;\n            }\n            \n            for (let i=0; i < 25; i++){\n                x++;\n                draw();\n            }\n            \n            for (let i=0; i < 75; i++){\n                xCount++;\n                draw();\n                if (xCount > 3){\n                    xCount=0;\n                    x--;\n                }\n                y--;\n            }\n            \n            for (let i=0; i < 35; i++){\n                x--;\n                draw();\n            }                \n        }\n        drawPants();\n            \n        let last100 = 0;\n        let hue = 0;\n        function frame(time){                \n            if (time > last100 + 100){\n                ctx3.fillStyle='hsl(' + hue + ', 100%, 50%)';\n                ctx3.fill();\n                last100 = time;\n                hue=hue+1;\n            }\n            requestAnimationFrame(frame);\n        }\n        frame();\n    }, []);\n\n\n\n    return(\n        <header>\n            <canvas id=\"canvas3\" width=\"100\" height=\"108\"></canvas>\n            <h1> Slacks!</h1>\n            <p>The premier chat app for afficionados of fine gentleman's trousers</p>\n        </header>\n    )\n}\n\nexport default Header\n","function LoginScreen(props){\n   \n    const handleChange = (e) => {\n        const {name, value} = e.target;\n        props.setUser(prevState => ({\n            ...prevState,\n            [name]: value,\n        }));\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        props.handleLogin(props.user);\n        props.setUser(props.user);\n    }\n\n    function handleClick(e){\n        props.setRegister(true)\n    }\n       \n    return(\n        <form className=\"mt-3\" onSubmit={handleSubmit}>\n\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor=\"username\">Username</label>\n                <input type=\"text\" className=\"form-control\" id=\"username\"\n                    placeholder=\"Enter username\"\n                    required\n                    name=\"username\" \n                    onChange={handleChange}\n                    value={props.user.username}\n                />\n            </div>\n\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" className=\"form-control\" id=\"password\"\n                    placeholder=\"Enter Password\"\n                    required\n                    name=\"password\" \n                    onChange={handleChange}\n                    value={props.user.password}\n                />\n            </div>\n\n           \n            <button type=\"submit\" className=\"btn btn-primary mt-3\">Login</button>\n            <button type=\"button\" onClick={handleClick} className=\"btn btn-primary mt-3\">Register</button>\n\n        </form>\n    )\n}\n\nexport default LoginScreen","import {useState} from 'react'\nimport Cookies from 'js-cookie';\n\nfunction RegisterForm(props){\n    const [user, setUser] = useState({\n        username: '',\n        email: '',\n        password1: '',\n        password2: '',\n    });\n\n    const [error, setError] = useState(null);\n\n    const handleChange = (e) => {\n        const {name, value} = e.target;\n        setUser(prevState => ({\n            ...prevState,\n            [name]: value,\n        }));\n    };\n\n    const handleError = (err) => console.warn(err);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (user.password1 !== user.password2){\n            setError('Passwords do not match!');\n        } else {\n            handleRegistration(user);\n        }\n    }\n\n    const handleRegistration = async (user) => {\n        const options = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken')\n          },\n          body: JSON.stringify(user),\n        }\n    \n        const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n        if (!response === true){\n          console.warn(response);\n        } else {\n          const data = await response.json();\n          Cookies.set(`Authorization`, `Token ${data.key}`);\n          props.setRegister(false);\n          props.setLogged(true);\n        }\n      }\n\n    return(\n        <form className=\"mt-3\" onSubmit={handleSubmit}>\n\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor=\"username\">Username</label>\n                <input type=\"text\" className=\"form-control\" id=\"username\"\n                    placeholder=\"Enter username\"\n                    required\n                    name=\"username\" \n                    onChange={handleChange}\n                    value={user.username}\n                />\n            </div>\n\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor=\"email\">E-mail</label>\n                <input type=\"email\" className=\"form-control\" id=\"email\"\n                    placeholder=\"Enter email\"\n                    required\n                    name=\"email\" \n                    onChange={handleChange}\n                    value={user.email}\n                />\n            </div>\n\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" className=\"form-control\" id=\"password1\"\n                    placeholder=\"Enter Password\"\n                    required\n                    name=\"password1\" \n                    onChange={handleChange}\n                    value={user.password1}\n                />\n            </div>\n\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" className=\"form-control\" id=\"password2\"\n                    placeholder=\"Confirm Password\"\n                    required\n                    name=\"password2\" \n                    onChange={handleChange}\n                    value={user.password2}\n                />\n                <span className=\"text-danger mt-2\">{error}</span>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary mt-3\">Register</button>\n\n        </form>\n    )\n}\n\nexport default RegisterForm\n\n\n\n","import {useState} from 'react'\nimport {InputGroup, FormControl} from 'react-bootstrap';\n\nfunction InputField(props){\n    const [message, setMessage] = useState('');\n\n    function handleChange(e) {\n        setMessage(e.target.value);\n    }\n\n    function handleClick(){\n        console.log(message)\n        props.submitMsg(props.selection, message);\n        \n        setMessage('');\n    }\n\n    return(\n    <InputGroup>        \n        <FormControl as=\"textarea\" aria-label=\"With textarea\" name=\"message\" \n                    onChange={handleChange}\n                    value={message}/>\n        <InputGroup.Text onClick={handleClick}>Send</InputGroup.Text>\n    </InputGroup>\n    )\n}\n\nexport default InputField","import './App.css';\nimport {useState, useEffect} from 'react';\nimport RoomNav from './components/RoomNav';\nimport Chatroom from './components/Chatroom';\nimport Header from './components/Header';\nimport LoginScreen from './components/LoginScreen';\nimport RegisterForm from './components/RegisterForm';\nimport Cookies from 'js-cookie';\nimport InputField from './components/InputField';\n\nfunction App() {\n  const [selection, setSelection] = useState('Home');\n  const [user, setUser] = useState({\n    \"pk\": 0,\n    \"username\": \"Filler\",\n  });\n  \n  const [logged, setLogged] = useState(false);\n  const [register, setRegister] = useState(false);\n  const [rooms, setRooms] = useState([]);\n  const [msgs, setMsgs] = useState([]);\n\n  async function fetchRooms(){\n    const response = await fetch('/api_v1/chat/rooms/')\n    if (response.ok){\n        const data = await response.json();\n        setRooms(data);\n    }\n}\n\n  async function fetchMsgs(){\n    const response = await fetch('/api_v1/chat/msgs/');\n    if (response.ok){\n        const data = await response.json();\n        setMsgs(data);\n    }\n  }\n\n  async function fetchUser(){\n    const response = await fetch(`/rest-auth/user/`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      }\n    });    \n    if (response.ok){\n        const data = await response.json();\n        setUser(data);\n    }\n  }\n\n  const handleLogout = () => {\n    Cookies.remove('Authorization');\n    setLogged(false);\n  };\n\n  async function handleLogin(user){\n    const response = await fetch('/rest-auth/login/', {\n      method: 'POST',\n      headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),  \n    })\n    if (!response === true){\n        console.warn(response);\n        // setLogged(false);\n    } else{\n        const data = await response.json();\n        Cookies.set(`Authorization`, `Token ${data.key}`);\n        console.warn(data.key);\n        if (data.key && !logged) {\n          setLogged(true)\n        } else {\n          Cookies.remove('Authorization');\n        }\n    }\n}\n\n\nasync function submitMsg(selection, text) {\n  const newMsg = {room_assoc: selection, sender: user.username, text: text };\n  console.log(newMsg);\n  const response = await fetch(`/api_v1/chat/msgs/`,{\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n      },\n      body: JSON.stringify(newMsg),\n  }).catch(console.log('Something went wrong'));\n  if (response.ok){\n        console.log('Message Submitted!');\n        setMsgs([[newMsg], ...msgs]);\n        fetchMsgs()\n  }\n}\n\nuseEffect(() => {\n  (Cookies.get('Authorization')) ? setLogged(true) : setLogged(false);\n  fetchRooms();\n  fetchMsgs();\n  fetchUser()}, []);\n \n\n  if (logged){    \n  return (\n    <div className=\"App container\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <Header />\n        </div>\n      </div>\n      <div className=\"row\">\n        <RoomNav selection={selection} setSelection={setSelection} rooms={rooms} setRooms={setRooms} fetchRooms={fetchRooms}/>\n        <div className=\"stacked col-10\">\n          <Chatroom msgs={msgs} setMsgs={setMsgs} selection={selection}/>\n          <InputField selection={selection} user={user} msgs={msgs} setMsgs={setMsgs} submitMsg={submitMsg}/>\n        </div>\n      </div>\n      <button onClick={handleLogout}>logout</button>      \n    </div>\n   );} else if (register===true){\n     return(<RegisterForm setRegister={setRegister} setUser={setUser} setLogged={setLogged}/> );\n   } else {\n    return (\n    <div>\n      <LoginScreen handleLogin={handleLogin} user={user} setUser={setUser} setRegister={setRegister}/>      \n    </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}